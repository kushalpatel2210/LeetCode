name: Update ReadMe with Commits

on:
  push:
    branches:
      - main  # or your default branch

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Get Folder Names
        id: folder_names
        run: |
          folder_list=$(python get_folders.py)
          echo "::set-output name=names::$folder_list"

      - name: Show Folder Names
        run: |
          echo "Folder names: ${{ steps.folder_names.outputs.names }}"

      - name: Get Previously Added Folders
        id: get_previous_folders
        run: |
          echo "PREVIOUS_FOLDERS=$(curl -H 'Authorization: token ${{ secrets.PAT_TOKEN }}' -H 'Accept: application/vnd.github.v3.raw' -s https://api.github.com/repos/${{ github.repository }}/contents/README.md | sed -n '/## Solved LeetCode Problems/,$!p; /## Solved LeetCode Problems/,$s/.*- \(.*\)/\1/p' | sed ':a;N;$!ba;s/\n/,/g')" >> $GITHUB_ENV

      - name: Filter New Folders
        id: filter_folders
        run: |
          folder_list=$(echo ${{ steps.folder_names.outputs.names }} | sed 's/\[//; s/\]//; s/ /,/g')
          previous_folders=$PREVIOUS_FOLDERS
            
            new_folders=""
            IFS=, read -ra new_folders_array <<< "$folder_list"
            for folder in "${new_folders_array[@]}"; do
              if [[ ! $previous_folders =~ (^|[ ,])$folder($|[ ,]) ]]; then
                new_folders="$new_folders $folder"
              fi
            done
            echo "::set-output name=filtered_folders::$new_folders"

      - name: Update ReadMe with New Folders
        run: |
          NEW_FOLDERS="${{ steps.filter_folders.outputs.filtered_folders }}"
          if [ -n "$NEW_FOLDERS" ]; then
            NEW_CONTENT=$(echo "$NEW_FOLDERS" | awk '{print "- " $0}')
            OLD_CONTENT=$(curl -H "Authorization: token ${{ secrets.PAT_TOKEN }}" -H "Accept: application/vnd.github.v3.raw" -s https://api.github.com/repos/${{ github.repository }}/contents/README.md)
            NEW_CONTENT=$(echo -e "$OLD_CONTENT\n\n## Solved LeetCode Problems\n$NEW_CONTENT" | sed ':a;N;$!ba;s/\n/\\n/g' | sed 's/"/\\"/g')
            PAYLOAD="{\"message\":\"Update README with folder names\",\"content\":\"$NEW_CONTENT\",\"sha\":\"$(echo "$OLD_CONTENT" | curl -s https://api.github.com/repos/${{ github.repository }}/contents/README.md | jq -r .sha)\"}"
            curl -X PUT -H "Authorization: token ${{ secrets.PAT_TOKEN }}" -H "Content-Type: application/json" -d "$PAYLOAD" https://api.github.com/repos/${{ github.repository }}/contents/README.md
          fi

      - name: Commit and Push Changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "Update README with recent commits"
          git push origin main
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
